"use client"

import React from 'react'
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Button } from '@/components/ui/button'
import { SessionDetail } from '../medical-agent/[sessionId]/page'
import moment from 'moment'

type Props = {
  record: SessionDetail
}

function ViewReportDialog({ record }: Props) {
  const report: any = record.report;

  if (!report) return null;

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button variant={'link'} size={'sm'}>View Report</Button>
      </DialogTrigger>

      <DialogContent className="max-w-3xl overflow-y-auto max-h-[90vh]">
        <DialogHeader>
          <DialogTitle className='text-center text-blue-600 text-2xl font-bold mb-4'>
            ðŸ©º Medical AI Voice Agent Report
          </DialogTitle>
        </DialogHeader>

        {/* Session Info */}
        <div className="border-b border-gray-300 pb-4 mb-4">
          <h2 className="text-blue-600 font-bold mb-3 text-xl">Session Info</h2>
          <div className="grid grid-cols-2 gap-y-1 text-sm">
            <p><span className='font-semibold'>Doctor:</span > {record.selectedDoctor?.specialist || "N/A"}</p>
            <p><span className='font-semibold'>User : </span> {report.user || "Anonymous"}</p>
            <p><span className='font-semibold'>Consulted On :</span> {moment(record.createdOn).fromNow()}</p>
            <p><span className='font-semibold'>Agent : </span> {report.agent || "Unknown Agent"}</p>
          </div>
        </div>

        {/* Chief Complaint */}
        <div className="border-b border-gray-300 pb-4 mb-4">
          <h2 className="text-blue-600 font-bold mb-3 text-xl">Chief Complaint</h2>
          <p>{report.chiefComplaint || "N/A"}</p>
        </div>

        {/* Summary */}
        <div className="border-b border-gray-300 pb-4 mb-4">
          <h2 className="text-blue-600 font-bold mb-3 text-xl">Summary</h2>
          <p>{report.summary || "No summary available"}</p>
        </div>

        {/* Symptoms */}
        {report.symptoms && report.symptoms.length > 0 && (
          <div className="border-b border-gray-300 pb-4 mb-4">
            <h2 className="text-blue-600 font-bold mb-3 text-xl">Symptoms</h2>
            <ul className="list-disc ml-5">
              {report.symptoms.map((symptom: string, index: number) => (
                <li key={index}>{symptom}</li>
              ))}
            </ul>
          </div>
        )}

        {/* Duration & Severity */}
        <div className="border-b border-gray-300 pb-4 mb-4">
          <h2 className="text-blue-600 font-bold mb-3 text-xl">Duration & Severity</h2>
          <p><span className="font-semibold">Duration : </span> {report.duration || "Not specified"}</p>
          <p><span className="font-semibold">Severity : </span> {report.severity || "N/A"}</p>
        </div>

        {/* Medications */}
        {report.medicationsMentioned && report.medicationsMentioned.length > 0 && (
          <div className="border-b border-gray-300 pb-4 mb-4">
            <h2 className="text-blue-600 font-bold mb-3 text-xl">Medications Mentioned</h2>
            <ul className="list-disc ml-5">
              {report.medicationsMentioned.map((med: string, index: number) => (
                <li key={index}>{med}</li>
              ))}
            </ul>
          </div>
        )}

        {/* Recommendations */}
        {report.recommendations && report.recommendations.length > 0 && (
          <div className="pb-4 mb-2">
            <h2 className="text-blue-600 font-bold mb-3 text-xl">Recommendations</h2>
            <ul className="list-disc ml-5">
              {report.recommendations.map((rec: string, index: number) => (
                <li key={index}>{rec}</li>
              ))}
            </ul>
          </div>
        )}

        {/* Footer */}
        <p className="text-xs text-center text-gray-500 mt-4 border-t pt-2">
          This report was generated by an AI Medical Assistant for informational purposes only.
        </p>
      </DialogContent>
    </Dialog>
  )
}

export default ViewReportDialog
